{"version":3,"sources":["components/HeaderComponent.js","components/SchedulerComponent.js","components/InterviewsComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","Navbar","dark","expand","className","Nav","NavItem","to","style","display","justifyContent","navbar","selectedCandidates","selectedInterviewers","selectedCandidatesEmail","Scheduler","props","handleChangeSelect","id","email","index","indexOf","push","splice","console","log","length","handleChangeInterviewer","handleAddUser","obj","state","newUserEmail","name","newUserName","alert","fetch","baseUrl","method","body","JSON","stringify","headers","credentials","then","response","ok","window","location","reload","json","catch","error","handleSubmit","startTime","endTime","currentId","subId","fetchCandidateList","Error","status","statusText","message","setState","users","Date","nope","bind","currId","href","substring","this","paddingTop","scope","map","user","type","onClick","_id","value","placeholder","onChange","event","target","marginLeft","borderRadius","minDate","hourPlaceholder","minutePlaceholder","Component","Interviews","interviews","interviewer","interviewee","padding","color","interview","toLocaleTimeString","toLocaleDateString","MainComponent","path","component","withRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e380d566.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { Nav,NavItem,Navbar} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nexport default function Header() {\n    const [isNavOpen,setNav]=useState(false);\n    return (\n      <Navbar dark expand=\"md header\">\n        <div className=\"col-6\">\n          <Nav>\n          <NavItem>\n              <NavLink className=\"nav-link\" to=\"/\">\n                <h2>Inteview Scheduler</h2>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </div>\n        <div className=\"col-6\" style={{display:'flex',justifyContent:'flex-end'}}>\n          <Nav navbar>\n              <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/scheduler\">\n                      <span className=\"fa fa-info fa-lg\"></span>Scheduler\n                  </NavLink>\n              </NavItem>\n              <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/interviews\">\n                      <span className=\"fa fa-list fa-lg\"></span>Interviews\n                  </NavLink>\n              </NavItem>\n          </Nav>\n        </div>\n        </Navbar>\n    );\n}\n","import React, { Component } from 'react';\nimport {baseUrl} from '../baseUrl.js'\nimport DateTimePicker from 'react-datetime-picker';\n\n\nvar selectedCandidates=[],selectedInterviewers=[],selectedCandidatesEmail=[];\nexport default class Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      users:[{name:\"Loading...\",email:\"Loading...\"}],\n      startTime:new Date(),\n      endTime:'',\n      currentId:'',\n      nope:false,\n      newUserEmail:'',\n      newUserName:''\n    }\n\n    this.fetchCandidateList = this.fetchCandidateList.bind(this);\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleChangeSelect=(id,email)=>{\n    let index=selectedCandidates.indexOf(id);\n    if(index===-1){\n      selectedCandidates.push(id);\n      selectedCandidatesEmail.push(email);\n    }\n    else{\n      selectedCandidates.splice(index,1);\n      selectedCandidatesEmail.splice(index,1);\n    }\n    console.log(selectedCandidates.length);\n  }\n  handleChangeInterviewer=(id)=>{\n    let index=selectedInterviewers.indexOf(id);\n    if(index===-1){\n      selectedInterviewers.push(id);\n    }\n    else{\n      selectedInterviewers.splice(index,1);\n    }\n  }\n  handleAddUser=()=>{\n    let obj={\n      email:this.state.newUserEmail,\n      name:this.state.newUserName\n    }\n    if(this.state.newUserEmail=='' || this.state.newUserName==''){\n      alert(\"Please enter new user's details\");\n    }\n    else{\n      fetch(baseUrl+'users/',{\n        method:'POST',\n        body:JSON.stringify(obj),\n        headers:{\n          'Content-Type': 'application/json'\n        },\n        credentials:'same-origin'\n      })\n      .then(response => {\n        if (response.ok) {\n          console.log(response);\n          window.location.reload();\n          return response;\n        } else {\n          return response.json().then((body) => {\n            // throw (\"Error \"+response.status.toString()+\" \"+response.statusText+\" \\n\"+body)\n            throw(body);\n          })\n        }\n      })\n      .then(response=>response.json())\n      .catch(error=>{console.log('Details ',error)\n        alert('Error adding new user \\n'+error)})  \n    }\n  }\n  handleSubmit=()=>{\n\n    if(this.state.startTime>this.state.endTime){\n      alert(\"Please select appropriate time values.\");\n    }\n    else{\n    let obj={\n      startTime:this.state.startTime,\n      endTime:this.state.endTime,\n      selectedCandidates,\n      selectedInterviewers,\n      selectedCandidatesEmail\n    }\n    if(this.state.currentId!=='' && this.state.currentId!='undefined')\n    obj.id=this.state.currentId;\n    let subId=this.state.currentId===''?'':this.state.currentId;\n    console.log(obj);\n    fetch(baseUrl+'interview/'+subId,{\n      method:'POST',\n      body:JSON.stringify(obj),\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        console.log(response);\n        alert('Interview schduled!');\n        return response;\n      } else {\n        return response.json().then((body) => {\n          // throw (\"Error \"+response.status.toString()+\" \"+response.statusText+\" \\n\"+body)\n          throw(body);\n        })\n      }\n    })\n    .then(response=>response.json())\n    .catch(error=>{console.log('Submit interview details ',error)\n      alert('Interview Schedule error \\n'+error)})\n    }\n  }\n\n  fetchCandidateList=()=>{\n    // debugger; \n    fetch(baseUrl+'users',{\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        // console.log(response);\n        return response;\n      } else {\n        // console.log(response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => {\n      // console.log(response);\n      this.setState({\n        users:response.users\n      })\n    })\n    .catch(error=>{console.log('Get Candidates ',error.message)\n      alert('Candidates could not be fetched \\nError: '+error.message)})\n  }\n  componentDidMount(){\n    selectedCandidates=[];\n    selectedCandidatesEmail=[];\n    selectedInterviewers=[];\n    // let currId=window.location.href.substring(36);\n    let currId=window.location.href.substring(32);\n    if(currId!==''){\n      this.setState({currentId:currId});\n    }\n    this.fetchCandidateList();\n  }\n\n  render() {\n    return (\n      <div className=\"row m-auto ml-0 background\" style={{paddingTop:10}}>\n        \n        <div className=\"col-12\">\n          <h4 className=\"text-center\">SCHEDULE INTERVIEW</h4>\n          <table className=\"table table-sm table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Interviewer</th>\n                <th scope=\"col\">Select</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.users.map((user)=>{\n                return (\n                  <tr key={user.email} >\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n\n                    <td><input type=\"checkbox\" onClick={()=>this.handleChangeInterviewer(user._id)} value={selectedCandidates.indexOf(user._id)===-1?false:true} /></td>\n                    <td><input type=\"checkbox\" onClick={()=>this.handleChangeSelect(user._id,user.email)} value={selectedInterviewers.indexOf(user._id)===-1?false:true}  /></td>\n                  </tr> \n                )\n              })}\n              <tr>\n                <td>\n                  <input type=\"text\" placeholder=\"Enter new user's name\" onChange={(event)=>this.setState({newUserName:event.target.value})} value={this.state.newUserName} />\n                  <input type=\"text\" placeholder=\"Enter new user's email\" onChange={(event)=>this.setState({newUserEmail:event.target.value})} value={this.state.newUserEmail} style={{marginLeft:'10px'}}/>\n                  <div className=\"btn btn-primary\" style={{marginLeft:'10px',borderRadius:35}} onClick={()=>this.handleAddUser()}>Add User</div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n        \n        <div className=\"col-sm-5 col-4\"></div>\n        <div className=\"col-12 col-sm-2 center columnWise\" >\n          <h4>SELECT TIME: </h4>\n          \n            <p>From : </p>\n            <DateTimePicker\n            value={this.state.startTime}\n            minDate={new Date()}\n            hourPlaceholder=\"Hour\"\n            minutePlaceholder=\"Min\"\n            onChange={(value)=>{this.setState({startTime:value})}}\n            />\n            <p>To : </p>\n            <DateTimePicker\n            hourPlaceholder=\"Hour\"\n            minutePlaceholder=\"Min\"\n            minDate={this.state.startTime}\n            value={this.state.endTime}\n            onChange={(value)=>{this.setState({endTime:value})}}\n            />\n        </div>\n        <div className=\"col-6\"></div>\n        <div className=\"col-12\" style={{display:'flex',justifyContent:'center',paddingTop:30}}>\n          <div className=\"btn btn-primary center\" style={{borderRadius:35}} onClick={()=>this.handleSubmit()}>Submit</div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// const styles={\n//   style:{\n//     backgroundImage: \"url(\" + \"background.jpg\" + \")\",\n//     backgroundPosition: 'center',\n//     backgroundSize: 'cover',\n//     backgroundRepeat: 'no-repeat',\n//     height:'100vh'\n//   }\n// }","import React, { Component } from 'react';\nimport { baseUrl } from '../baseUrl';\nimport { NavLink } from 'react-router-dom';\nexport default class Interviews extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      interviews:[{startTime:\"Loading...\",endTime:\"Loading\",\n      interviewer:[\"Loading...\"],interviewee:[\"Loading...\"]}],\n    }\n  }\n  \n  componentDidMount(){\n    console.log(this.props.location)\n    fetch(baseUrl+'interview',{\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => {\n      this.setState({\n        interviews:response.interviews\n      })\n      console.log(response.interviews);\n    })\n    .catch(error=>{console.log('Get Interviews ',error.message)\n      alert('Interviews could not be fetched \\n'+error.message)})\n  }\n\n  render() {\n    return (\n      <div style={{padding:10}}>\n        <h4 className=\"text-center\">Upcoming interviews</h4>\n        <table className=\"table table-sm table-dark\" style={{color:'white'}}>\n          <thead>\n            <tr>\n              <th scope=\"col\">Start Time</th>\n              <th scope=\"col\">End Time</th>\n              <th scope=\"col\">Interviewers</th>\n              <th scope=\"col\">Interviewees</th>\n              <th scope=\"col\">Click to edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.interviews.map((interview)=>{\n              return (\n                <tr key={interview._id}>\n                  <td>\n                    <p>{new Date(interview.startTime).toLocaleTimeString()}</p>\n                    <p>{new Date(interview.startTime).toLocaleDateString()}</p>\n                  </td>\n                  <td><p>{new Date(interview.endTime).toLocaleTimeString()} </p>\n                  <p>{new Date(interview.endTime).toLocaleDateString()}</p></td>\n                  <td>\n                      {interview.interviewer.map((interviewer)=>{\n                        return(\n                        <li>\n                         <p> {interviewer.name}</p>\n                          <li>\n                          <p>- {interviewer.email}</p></li>\n                        </li>\n                        )\n                      })}\n                  </td>\n                  <td>\n                      {interview.interviewee.map((interviewee)=>{\n                        return(\n                        <li>\n                          <p>{interviewee.name}</p>\n                          <li>\n                          <p>- {interviewee.email}</p></li>\n                          </li>\n                        )\n                      })}\n                  </td>\n\n                <td><NavLink to={\"/scheduler/\"+(interview._id)}><button className=\"btn btn-primary\">Edit</button></NavLink></td>\n                </tr> \n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Scheduler from './SchedulerComponent';\nimport Interviews from './InterviewsComponent';\nimport {Switch , Route, Redirect , withRouter} from 'react-router-dom';\nclass MainComponent extends Component{\n  constructor(props) {\n    super(props);\n    \n  }\n  \n  render(){\n    return (\n      <>\n      <Header/>\n        <Switch location={this.props.location}>\n          <Route path='/scheduler' component={Scheduler} />\n          <Route path='/scheduler/:id' component={Scheduler} />\n          <Route path='/interviews' component={Interviews} />\n          <Redirect to=\"/scheduler\" />\n        </Switch>\n      </>\n    );\n    }\n}\n\nexport default withRouter(MainComponent);\n\n{/* <Switch location={this.props.location}>\n    <Route path='/home' component={HomePage} />\n    <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n    <Route path='/menu/:dishId' component={DishWithId}/>\n    <PrivateRoute exact path=\"/favorites\" component={() => <Favorite favorites={this.props.favorites} deleteFavorite={this.props.deleteFavorite} />} />\n    <Route exact path='/contactus' component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n    <Route path='/aboutus' component={Leader}/>\n    <Redirect to=\"/home\" />\n</Switch> */}","import './App.css';\nimport MainComponent from './components/MainComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <MainComponent />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}