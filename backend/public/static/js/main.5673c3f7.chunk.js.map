{"version":3,"sources":["components/HeaderComponent.js","baseUrl.js","components/SchedulerComponent.js","components/InterviewsComponent.js","components/MainComponent.js","App.js","reportWebVitals.js","index.js"],"names":["Header","useState","Navbar","dark","expand","className","Nav","NavItem","to","style","display","justifyContent","navbar","baseUrl","selectedCandidates","selectedInterviewers","Scheduler","props","handleChangeSelect","id","index","indexOf","push","splice","console","log","length","handleChangeInterviewer","handleSubmit","alert","state","startTime","endTime","obj","currentId","subId","fetch","method","body","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","message","catch","fetchCandidateList","json","setState","users","name","email","Date","nope","bind","currId","window","location","href","substr","this","paddingTop","scope","map","user","type","onClick","_id","disableClock","value","minDate","hourPlaceholder","minutePlaceholder","onChange","borderRadius","Component","Interviews","interviews","interviewer","interviewee","color","interview","toUTCString","MainComponent","path","component","withRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5673c3f7.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nimport { Nav,NavItem,Navbar} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nexport default function Header() {\n    const [isNavOpen,setNav]=useState(false);\n    return (\n      <Navbar dark expand=\"md header\">\n        <div className=\"col-6\">\n          <Nav>\n          <NavItem>\n              <NavLink className=\"nav-link\" to=\"/\">\n                <h2>Inteview Scheduler</h2>\n              </NavLink>\n            </NavItem>\n          </Nav>\n        </div>\n        <div className=\"col-6\" style={{display:'flex',justifyContent:'flex-end'}}>\n          <Nav navbar>\n              <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/scheduler\">\n                      <span className=\"fa fa-info fa-lg\"></span>Scheduler\n                  </NavLink>\n              </NavItem>\n              <NavItem>\n                  <NavLink className=\"nav-link\" to=\"/interviews\">\n                      <span className=\"fa fa-list fa-lg\"></span>Interviews\n                  </NavLink>\n              </NavItem>\n          </Nav>\n        </div>\n        </Navbar>\n    );\n}\n","export const baseUrl=\"http://localhost:3000/\";","import React, { Component } from 'react';\nimport {baseUrl} from '../baseUrl.js'\nimport DateTimePicker from 'react-datetime-picker';\n\n\nvar selectedCandidates=[],selectedInterviewers=[];\nexport default class Scheduler extends Component {\n  constructor(props) {\n    super(props);\n    this.state={\n      users:[{name:\"Loading...\",email:\"Loading...\"}],\n      startTime:new Date(),\n      endTime:'',\n      currentId:'',\n      nope:false\n    }\n\n    this.fetchCandidateList = this.fetchCandidateList.bind(this);\n    this.handleChangeSelect = this.handleChangeSelect.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  \n  handleChangeSelect=(id)=>{\n    let index=selectedCandidates.indexOf(id);\n    if(index===-1){\n      selectedCandidates.push(id);\n    }\n    else{\n      selectedCandidates.splice(index,1);\n    }\n    console.log(selectedCandidates.length);\n  }\n  handleChangeInterviewer=(id)=>{\n    let index=selectedInterviewers.indexOf(id);\n    if(index===-1){\n      selectedInterviewers.push(id);\n    }\n    else{\n      selectedInterviewers.splice(index,1);\n    }\n  }\n  handleSubmit=()=>{\n\n    if(selectedCandidates.length<2){\n      alert(\"Please select atleast 2 candidates.\");\n    }\n    else if(this.state.startTime>this.state.endTime){\n      alert(\"Please select appropriate time values.\");\n    }\n    else{\n    let obj={\n      startTime:this.state.startTime,\n      endTime:this.state.endTime,\n      selectedCandidates,\n      selectedInterviewers\n    }\n    if(this.state.currentId!=='' && this.state.currentId!='undefined')\n    obj.id=this.state.currentId;\n    let subId=this.state.currentId===''?'':this.state.currentId;\n    console.log(obj);\n    fetch(baseUrl+'interviews/'+subId,{\n      method:'POST',\n      body:JSON.stringify(obj),\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        console.log(response);\n        alert('Interview schduled!');\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .catch(error=>{console.log('Submit interview details ',error.message)\n      alert('Interview could not be scheduled due to clash \\n'+error.message)})\n    }\n  }\n\n  fetchCandidateList=()=>{\n\n    fetch(baseUrl+'users',{\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        // console.log(response);\n        return response;\n      } else {\n        // console.log(response);\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => {\n      // console.log(response);\n      this.setState({\n        users:response.users\n      })\n    })\n    .catch(error=>{console.log('Get Candidates ',error.message)\n      alert('Candidates could not be fetched \\nError: '+error.message)})\n  }\n  componentDidMount(){\n    let currId=window.location.href.substr(32);\n    if(currId!==''){\n      this.setState({currentId:currId});\n    }\n    this.fetchCandidateList();\n  }\n\n  render() {\n    return (\n      <div className=\"row m-auto ml-0\" style={{paddingTop:10}}>\n        \n        <div className=\"col-12\">\n          <h4 className=\"text-center\">SCHEDULE INTERVIEW</h4>\n          <table className=\"table table-sm table-dark\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Email</th>\n                <th scope=\"col\">Interviewer</th>\n                <th scope=\"col\">Select</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.users.map((user)=>{\n                return (\n                  <tr key={user.email} >\n                    <td>{user.name}</td>\n                    <td>{user.email}</td>\n                    <td><input type=\"checkbox\" onClick={()=>this.handleChangeInterviewer(user._id)} /></td>\n                    <td><input type=\"checkbox\" onClick={()=>this.handleChangeSelect(user._id)} /></td>\n                  </tr> \n                )\n              })}\n            </tbody>\n          </table>\n        </div>\n        \n        <div className=\"col-sm-5 col-4\"></div>\n        <div className=\"col-12 col-sm-2 center columnWise\" >\n          <h4>SELECT TIME: </h4>\n          \n            <p>From : </p>\n            <DateTimePicker\n            disableClock={false}\n            value={this.state.startTime}\n            minDate={this.state.startTime===''?new Date():this.state.startTime}\n            hourPlaceholder=\"Hour\"\n            minutePlaceholder=\"Min\"\n            onChange={(value)=>{this.setState({startTime:value})}}\n            />\n            <p>To : </p>\n            <DateTimePicker\n            disableClock={false}\n            hourPlaceholder=\"Hour\"\n            minutePlaceholder=\"Min\"\n            minDate={this.state.startTime}\n            value={this.state.endTime}\n            onChange={(value)=>{this.setState({endTime:value})}}\n            />\n        </div>\n        <div className=\"col-6\"></div>\n        <div className=\"col-12\" style={{display:'flex',justifyContent:'center',paddingTop:30}}>\n          <div className=\"btn btn-primary center\" style={{borderRadius:35}} onClick={()=>this.handleSubmit()}>Submit</div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { baseUrl } from '../baseUrl';\n\nexport default class Interviews extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state={\n      interviews:[{startTime:\"Loading...\",endTime:\"Loading\",\n      interviewer:[\"Loading...\"],interviewee:[\"Loading...\"]}],\n    }\n  }\n  \n  componentDidMount(){\n    console.log(this.props.location)\n    fetch(baseUrl+'interviews',{\n      headers:{\n        'Content-Type': 'application/json'\n      },\n      credentials:'same-origin'\n    })\n    .then(response => {\n      if (response.ok) {\n        return response;\n      } else {\n        var error = new Error('Error ' + response.status + ': ' + response.statusText);\n        error.response = response;\n        throw error;\n      }\n    },\n    error => {\n          var errmess = new Error(error.message);\n          throw errmess;\n    })\n    .then(response => response.json())\n    .then(response => {\n      this.setState({\n        interviews:response.interviews\n      })\n      console.log(response.interviews);\n    })\n    .catch(error=>{console.log('Get Interviews ',error.message)\n      alert('Interviews could not be fetched \\n'+error.message)})\n  }\n\n  render() {\n    return (\n      <div>\n        <h4 className=\"text-center\">Upcoming interviews</h4>\n        <table className=\"table table-sm table-dark\" style={{color:'white'}}>\n          <thead>\n            <tr>\n              <th scope=\"col\">Start Time</th>\n              <th scope=\"col\">End Time</th>\n              <th scope=\"col\">Interviewers</th>\n              <th scope=\"col\">Interviewees</th>\n              <th scope=\"col\">Click to edit</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.interviews.map((interview)=>{\n              return (\n                <tr>\n                  <td>\n                    {new Date(interview.startTime).toUTCString()}\n                  </td>\n                  <td>{new Date(interview.endTime).toUTCString()}</td>\n                  <td>\n                      {interview.interviewer.map((interviewer)=>{\n                        return(\n                        <li>\n                         <p> {interviewer.name}</p>\n                          <ul><li>\n                          <p>{interviewer.email}</p></li></ul>\n                        </li>\n                        )\n                      })}\n                  </td>\n                  <td>\n                      {interview.interviewee.map((interviewee)=>{\n                        return(\n                        <li>\n                          <p>{interviewee.name}</p>\n                          <ul><li>\n                          <p>{interviewee.email}</p></li></ul>\n                          </li>\n                        )\n                      })}\n                  </td>\n\n                <td><a href={\"/scheduler/\"+(interview._id)}><button className=\"btn btn-primary\">Edit</button></a></td>\n                </tr> \n              )\n            })}\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport Header from './HeaderComponent';\nimport Scheduler from './SchedulerComponent';\nimport Interviews from './InterviewsComponent';\nimport {Switch , Route, Redirect , withRouter} from 'react-router-dom';\nclass MainComponent extends Component{\n  constructor(props) {\n    super(props);\n    \n  }\n  \n  render(){\n    return (\n      <>\n      <Header/>\n        <Switch location={this.props.location}>\n          <Route path='/scheduler' component={Scheduler} />\n          <Route path='/interviews' component={Interviews} />\n          <Redirect to=\"/scheduler\" />\n        </Switch>\n      </>\n    );\n    }\n}\n\nexport default withRouter(MainComponent);\n\n{/* <Switch location={this.props.location}>\n    <Route path='/home' component={HomePage} />\n    <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\n    <Route path='/menu/:dishId' component={DishWithId}/>\n    <PrivateRoute exact path=\"/favorites\" component={() => <Favorite favorites={this.props.favorites} deleteFavorite={this.props.deleteFavorite} />} />\n    <Route exact path='/contactus' component={()=><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>} />\n    <Route path='/aboutus' component={Leader}/>\n    <Redirect to=\"/home\" />\n</Switch> */}","import './App.css';\nimport MainComponent from './components/MainComponent';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div>\n        <MainComponent />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}